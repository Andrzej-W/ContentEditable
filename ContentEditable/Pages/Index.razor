@page "/"
@inject IJSRuntime JS

@if (editMode)
{
  <div @ref="editorEdit" @onkeydown="GetContent" contenteditable>
    @((MarkupString)content)
  </div>
}
else
{
  <div @ref="editorDisplay">
    @((MarkupString)content)
  </div>
}
<button @onclick="ChangeMode">@buttonText</button>
<div>Current content:<br />@content2</div>

@functions
{
  ElementReference editorDisplay;
  ElementReference editorEdit;
  const string buttonTextStart = "Start editing";
  const string buttonTextStop = "Stop editing";
  string content = "ab";
  string content2 = String.Empty;
  bool editMode = false;
  string buttonText = buttonTextStart;

  async Task ChangeMode()
  {
    editMode = !editMode;
    buttonText = editMode ? buttonTextStop : buttonTextStart;
    if (!editMode)
    {
      string tmp = await JS.InvokeAsync<string>("JsLib.getInnerHtml", editorEdit);
      content = tmp.Replace("<!--!-->", string.Empty);
    }
  }
  async Task GetContent()
  {
    string tmp = await JS.InvokeAsync<string>("JsLib.getInnerHtml", editorEdit);
    content2 = tmp.Replace("<!--!-->", string.Empty);
  }
}
